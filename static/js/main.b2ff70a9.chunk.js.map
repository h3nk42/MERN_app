{"version":3,"sources":["Assets/img/ForestFoggy.jpg","Assets/img/Plus.js","components/Home/AddPlantComponent/PlantSelect.js","components/Home/AddPlantComponent/AddPlant.js","components/Home/AddPlantComponent/PlantPlus.js","components/Home/RenderItems.js","components/Home/Items.js","components/Header/HeaderElement.js","components/Header/Header.js","components/Home/PlantViewComponent.js","components/Footer/MyFooter.js","components/Home/Home.js","components/plantApi/Data/Plantitem.js","components/plantApi/Data/ShowPlantData.js","components/plantApi/ApiLanding/ApiLanding.js","components/Felix/FelixPage.js","components/Franzi/FranziPage.js","components/Sunan/SunanPage.js","Router.js","serviceWorker.js","index.js"],"names":["module","exports","Plus","props","color","width","height","fill","viewBox","d","Option","Select","PlantSelect","renderSpecies","name","id","map","data","key","value","showSearch","style","placeholder","optionFilterProp","onChange","setAge","onFocus","console","log","onBlur","onSearch","val","filterOption","input","option","children","toLowerCase","indexOf","AddPlant","className","icon","LeftOutlined","onClick","handlePlantState","minWidth","e","setMessage","target","message","age","CheckOutlined","handleClick","disabled","PlantPlus","useState","hover","setHover","wobble","setWobble","wobbleReverse","setWobbleReverse","addPlantState","setAddPlantState","handleNewPlantClickTime","setTimeout","handleNewPlantClick","toggleHover","bool","borderRadius","backgroundColor","colorScheme","fourth","wobblereverse","onAnimationEnd","onMouseEnter","onMouseLeave","cursor","Meta","Card","RenderItems","imgLinks","listItems","items","_id","margin","boxShadow","cover","alt","src","actions","ProfileOutlined","handlePlantView","DeleteOutlined","deleteItem","title","description","flexWrap","padding","fifth","length","Items","setItems","intervalIsSet","useEffect","getDataFromDb","url","socket","on","messagePopup","info","firstTime","fetch","then","json","res","setLoading","putDataToDB","axios","post","loading","LoadingOutlined","fontSize","maxWidth","display","flexDirection","idTodelete","parseInt","objIdToDelete","forEach","dat","method","HeaderElement","history","useHistory","push","route","marginLeft","marginRight","Header","renderHeaderElements","shadow","PlantViewComponent","toggleLoading","MyFooter","Content","Layout","Home","urls","plantView","setPlantView","imgLoading","setImgLoading","setSocket","socketIOClient","disconnect","main","second","third","fontFamily","onLoad","minHeight","backgroundSize","backgroundImage","marginBottom","Plantitem","imgHovered","setImgHovered","styles","imageStyle","imageStyleHovered","image_url","ShowPlantData","dataState","setData","dataContainer","overflow","border","dataList","listStyleType","catch","error","Forest","require","ApiLanding","windowWidth","setWindowWidth","windowHeight","setWindowHeight","buttonHovered","setButtonHovered","Container","backgroundImg","pointerEvents","position","zIndex","objectFit","backgroundDiv","FontStyle","paddingLeft","textShadow","buttonStyle","background","textAlign","buttonStyleHovered","updateWindowDimensions","window","addEventListener","innerHeight","innerWidth","state","FelixPage","FranziPage","SunanPage","Router","exact","path","render","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b2ff70a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ForestFoggy.41fbb5ef.jpg\";","import React from 'react';\n\nimport Icon from '@ant-design/icons';\n\nconst Plus = (props) =>\n    <svg color={props.color} width=\"60px\" height=\"60px\" fill=\"currentColor\" viewBox=\"0 0 512 512\">\n        <path d='M492,236H276V20c0-11.046-8.954-20-20-20c-11.046,0-20,8.954-20,20v216H20c-11.046,0-20,8.954-20,20s8.954,20,20,20h216\n\t\t\tv216c0,11.046,8.954,20,20,20s20-8.954,20-20V276h216c11.046,0,20-8.954,20-20C512,244.954,503.046,236,492,236z' />\n    </svg>\n\nexport default Plus","import {Select} from 'antd';\nimport React from 'react'\n\nconst { Option } = Select;\n\nconst PlantSelect = (props) =>{\n\n    function onChange(value) {\n        props.setAge(value)\n    }\n\n    function onBlur() {\n        console.log('blur');\n    }\n\n    function onFocus() {\n        console.log('focus');\n    }\n\n    function onSearch(val) {\n        console.log('search:', val);\n    }\n\n    let species = [{\n        name: 'monstera',\n        id: 1},\n        {\n            name: 'philodendron',\n            id: 2},\n        {\n            name: 'pilea peperomioides\\n',\n            id: 3}]\n\n   const renderSpecies = species.map((data) =>\n       <Option\n           key={data.id}\n           value={data.id}\n       >\n           {data.name}\n       </Option>\n   )\n\n    return(\n        <Select\n            showSearch\n            style={{ width: 150 }}\n            placeholder=\"Select a species\"\n            optionFilterProp=\"children\"\n            onChange={onChange}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            onSearch={onSearch}\n            filterOption={(input, option) =>\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n        >\n            {renderSpecies}\n        </Select>\n    )}\n\nexport default PlantSelect","import React from 'react'\nimport {Button, Input, Select} from \"antd\";\nimport {LeftOutlined, CheckOutlined} from \"@ant-design/icons\";\nimport PlantSelect from \"./PlantSelect\";\n\n\nconst AddPlant = (props) => {\n    return (\n        <div className='flex flex-column items-center justify-center'>\n            <Button style={{width: '80px'}} icon={<LeftOutlined />}  onClick={props.handlePlantState}> back </Button>\n            <Input style={{minWidth: '100px', width: '50%'}} onChange={(e) => props.setMessage(e.target.value )} placeholder=\"name\" />\n            <PlantSelect {...props}></PlantSelect>\n            <div style={{height:'20px'}}></div>\n            {\n                (props.message && props.age ) ?\n                    <Button style={{width: '80px'}} icon={<CheckOutlined />}  onClick={() => {\n                        props.handleClick(props.message)\n                        props.handlePlantState()\n                    }\n                    }> send </Button>\n                    :\n                    <Button disabled={true} style={{width: '80px'}} icon={<CheckOutlined />}  onClick={() => {\n                        props.handleClick(props.message)\n                        props.handlePlantState()\n                    }\n                    }> send </Button>\n            }\n\n\n        </div>\n    )\n}\n\nexport default AddPlant","import React, {useState} from 'react'\nimport Plus from \"../../../Assets/img/Plus\";\nimport '../../../styles/ripple.css'\nimport AddPlant from \"./AddPlant\";\n\n\nconst PlantPlus = (props) => {\n\n    const [hover, setHover] = useState(false)\n    const [wobble, setWobble] = useState(0)\n    const [wobbleReverse, setWobbleReverse] = useState(0)\n    const [addPlantState, setAddPlantState] = useState(false)\n\n    const handleNewPlantClickTime = () => {\n        setWobble(1)\n        setTimeout(() => {\n            setAddPlantState(!addPlantState)\n\n        }, 500)\n    }\n\n    const handleNewPlantClick = () => {\n            setAddPlantState(!addPlantState)\n            setWobble(0)\n            setWobbleReverse(1)\n    }\n\n    const renderStyle = () => {\n        return hover ?\n            {width:'202px', height:'200px', cursor: 'pointer', borderRadius: '100px'}\n            :\n            {width:'202px', height:'200px', borderRadius: '100px'}\n    }\n\n    const renderContent = () => {\n        return addPlantState ?\n            <div  className='flex flex-column items-center justify-center'  style={{width:'202px', height:'200px',borderRadius: '100px', backgroundColor:props.colorScheme.fourth}}>\n                <div className='flex flex-row items-center justify-center'  style={{height: '80px'}} >\n                    <AddPlant handlePlantState={handleNewPlantClick} {...props} />\n                </div>\n            </div>\n            :\n        <div  wobble={wobble} wobblereverse={wobbleReverse} onAnimationEnd={() =>{\n                setWobble(0)\n                setWobbleReverse(0)\n        }}\n              className=' myDiv myDivReverse flex flex-column items-center justify-center' onMouseEnter={ () => toggleHover(true)} onMouseLeave={() => toggleHover(false)} onClick={handleNewPlantClickTime} style={renderStyle()}>\n            <div className='flex flex-row items-center justify-center'  style={{height: '80px'}} >\n                <Plus color={'white'}{...props} />\n            </div>\n        </div>\n\n    }\n\n\n    const toggleHover = (bool) => {\n        setHover(bool)\n    }\n\n    return (\n        renderContent()\n    )\n\n}\n\nexport default PlantPlus\n","import React, { useState } from 'react';\nimport {Row, Col, Button, Card, Avatar, Empty} from 'antd';\nimport { DeleteOutlined, ProfileOutlined ,  EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\nimport PlantPlus from \"./AddPlantComponent/PlantPlus\";\nconst { Meta } = Card\n\n\nfunction RenderItems (props) {\n\n\n    const imgLinks = [\n        'https://i.ibb.co/1JF6wrY/monstera.png',\n        'https://i.ibb.co/pKbJxQV/philo.png',\n        \"https://i.ibb.co/fY2wB9m/ufoplant.png\", ]\n\n    const renderEmpty = () => {\n        return props.items.length>0 ?\n           <div/>\n            :\n            <Empty description={'no plants..'}/>\n    }\n\n\n\n\n    const listItems = props.items.map( (data) =>\n        <Card\n            key={data._id}\n            style={{ width: 200, margin: '0.5%',boxShadow: '2px 2px 10px black' }}\n            cover={\n                <img\n                    alt=\"example\"\n                    src= {imgLinks[ data.id-1]}\n                />\n            }\n            actions={[\n                <ProfileOutlined onClick={() => {props.handlePlantView()}} key=\"ellipsis\" />,\n                <DeleteOutlined onClick={() => {props.deleteItem(data.id)}} key=\"ellipsis\" />,\n            ]}\n        >\n            <Meta\n                title={data.message}\n                description= {data.id}\n            />\n        </Card>\n    )\n\n    return(\n        <div className='flex flex-row items-start justify-center' style={{flexWrap: 'wrap', padding: '2%', width: '645px', height: '100%', backgroundColor: props.colorScheme.fifth}}>\n            {renderEmpty()}\n            {listItems}\n        </div>\n\n\n    )\n}\n\n\nexport default RenderItems\n\n\n/*\nstyle={{ margin:'1%', padding: '1%', width: '14%', height: '20%', backgroundColor: 'black'}}\n <div key={data.id}>\n                <p style={{color: 'white'}}> Msg: {data.message} </p>\n                <p style={{color: 'white'}}> id: {data.id} </p>\n                <Button danger type=\"text\" onClick={() => {props.deleteItem(data.id)}}> delete </Button>\n            </div>\n*/\n","import React, {useEffect, useState} from \"react\";\nimport RenderItems from \"./RenderItems\";\nimport axios from \"axios\";\nimport '../../styles/BoxShadows.css'\nimport { message as messagePopup }  from 'antd'\nimport {CheckOutlined, LoadingOutlined } from \"@ant-design/icons\";\nimport PlantPlus from \"./AddPlantComponent/PlantPlus\";\n\n\nlet messages = [];\n\nfunction Items (props) {\n\n    const [items, setItems] = useState([] )\n    const [intervalIsSet, setIntervalIsSet] = useState(false)\n    const [message, setMessage] = useState(null)\n    const [age, setAge] = useState(null)\n\n\n    useEffect(() => {\n        getDataFromDb(props.url, true);\n       if(props.socket != null) {\n            props.socket.on(\"dbUpdated\", data => {\n                getDataFromDb(props.url, true);\n                messagePopup.info(`db update: ${data}`)\n            });\n       }\n    }, [intervalIsSet, props.url, props.socket])\n\n\n    //http://localhost:3001/api/getData\n    const getDataFromDb = (url, firstTime) => {\n        fetch(url+\"api/getData\")\n            .then((data) => data.json())\n            .then((res) => {\n                setItems(res.data)\n                if(firstTime) {setTimeout(() => props.setLoading(false),300)}\n            });\n    };\n\n    const putDataToDB = (message) => {\n        axios.post(`${props.url}api/putData`, {\n            id: age,\n            message: message,\n        });\n        setMessage(null)\n        setAge(null)\n    };\n\n\n    const deleteFromDB = (idTodelete) => {\n        parseInt(idTodelete);\n        let objIdToDelete = null;\n        items.forEach((dat) => {\n            if (dat.id == idTodelete) {\n                objIdToDelete = dat._id;\n            }\n        });\n\n        axios({\n            method: 'delete',\n            url: `${props.url}api/deleteData`,\n            data: {id: objIdToDelete}\n        });\n    };\n\n\n\n    return (\n        props.loading ?\n            <div className='flex flex-column justify-start items-center' style={{height: '800px', width: '800px'}}>\n                <div className='flex flex-column justify-center items-center' style={{width: '30%', height: '40%', backgroundColor: props.colorScheme.fifth}}>\n                    <LoadingOutlined style={{ fontSize: '100px', color: 'white' }} />\n                </div>\n            </div>\n            :\n            <div className='flex flex-column'>\n                <div  style={{boxShadow: '9px 11px 34px 1px rgba(0,0,0,0.71)', maxWidth: '60%', height: '100%', display: 'flex', flexDirection: 'column'}}>\n                    <RenderItems handleClick={putDataToDB} message={message} setMessage={setMessage} age={age} setAge={setAge} items={items} setItems={setItems} deleteItem={deleteFromDB} {...props} />\n                </div>\n                <div className='self-center pt-4'>\n                    <PlantPlus handleClick={putDataToDB} message={message} setMessage={setMessage} age={age} setAge={setAge} items={items} setItems={setItems} {...props} />\n                </div>\n            </div>\n    )\n}\n\nexport default Items\n","import React, {useState} from 'react'\nimport { useHistory }  from 'react-router-dom'\n\nconst HeaderElement = (props) => {\n    const [hover, setHover] = useState(false)\n\n    const history = useHistory()\n\n    const getBackgroundColor = () => {\n        return hover ?\n            (props.colorScheme.fourth)\n            :\n            ('')\n    }\n\n    const toggleHover = () => {\n        setHover(!hover)\n    }\n\n    return(\n\n        <div\n            onMouseEnter={ toggleHover}\n            onMouseLeave={toggleHover}\n            onClick={ () => { history.push(`/${props.route}`) }}\n            key={props.val}\n            className=' flex flex-row justify-center items-center'\n            style={{\n                cursor: 'pointer' ,\n                marginLeft: '4%',\n                marginRight: '4%',\n                height: 'auto',\n                width: '100%',\n                backgroundColor: getBackgroundColor() }}>\n            {props.val}\n        </div>\n\n    )\n\n}\n\nexport default HeaderElement\n","import React from 'react'\nimport HeaderElement from \"./HeaderElement\";\nimport PlantSvg from \"../../Assets/img/PlantSvg\";\nimport Plus from \"../../Assets/img/Plus\";\nimport Fragezeichen from \"../../Assets/img/Fragezeichen\";\nimport '../../styles/BoxShadows.css'\n\nconst Header = (props) => {\n\n/*    const headerElements = [{\n        data: <PlantSvg {...props}/>,\n        id: 1\n        }, {\n        data: <Plus color={props.colorScheme.main} {...props}/>,\n        id: 2\n    },\n        {data: <Fragezeichen {...props}/>,\n        id: 3\n        }]*/\n\n    const headerElements = [{\n        data: <h2 style={{color: 'white'}}> HOME </h2>,\n        id: 1,\n        route: ''\n    }, {\n        data: <h2 style={{color: 'white'}}> API </h2>,\n        id: 2,\n        route: 'api'\n    },\n        {\n            data: <h2 style={{color: 'white'}}> Felix </h2>,\n            id: 3,\n            route: 'Felix'\n    },\n        {\n            data: <h2 style={{color: 'white'}}> Sunan </h2>,\n            id: 4,\n            route: 'Sunan'\n        },\n        {\n            data: <h2 style={{color: 'white'}}> Franzi </h2>,\n            id: 5,\n            route: 'Franzi'\n        }]\n\n    let returnShadow = () => {\n        return props.shadow ?\n            {\n                boxShadow: '-2px 19px 39px 34px rgba(0,0,0,1)',\n                height: '80px',\n                width: '100vw'\n            }\n        :\n            {\n\n                height: '80px',\n                width: '100vw'\n            }\n\n    }\n\n    const renderHeaderElements =\n        headerElements.map( (e) =>\n        <HeaderElement key={e.id} val = {e.data} route={e.route} {...props} />\n        )\n\n    return(\n        <div\n            className='flex flex-row items-center justify-center'\n            style={returnShadow()}>\n\n            {renderHeaderElements}\n        </div>\n    )\n\n}\n\nexport default Header\n","import React from 'react'\nimport '../../styles/BoxShadows.css'\nimport {LeftOutlined, ProfileOutlined} from '@ant-design/icons';\nimport {Button} from \"antd\";\n\nconst PlantViewComponent = (props) => {\n\n\n    return (\n        <div className='flex flex-row items-center justify-center'>\n            <div className='card-3 flex flex-column justify-center items-center' style={{height: '700px',width: '500px',  display: 'flex', flexDirection: 'row', backgroundColor: props.colorScheme.fifth}}>\n                <Button className='self-end align-self-start'style={{width: '80px'}} icon={<LeftOutlined />}  onClick={ () => {\n                    props.toggleLoading()\n                    props.handlePlantView()\n                }\n                }> back </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default PlantViewComponent","import React from 'react'\n\n\nconst MyFooter = (props) => {\n\n    return(\n        <div\n            className='flex flex-row items-center justify-center'\n            style={{height:'80px',\n                width: '100vw',\n                boxShadow: ' -2px -32px 39px 1px rgba(0,0,0,1)',\n            }}>\n            <h2 style={{color: 'white'}}> Share your </h2>\n            <h2 style={{color: 'black'}}> Plant // created by Henk van der </h2>\n            <h2 style={{color: 'white'}}> Sloot // ©2020 </h2>\n        </div>\n    )\n\n}\n\nexport default MyFooter","import React, {useState, useEffect} from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport { Layout } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../../styles/ImageStyleBg.css'\nimport Items from \"./Items\";\nimport Header from \"../Header/Header\";\nimport PlantViewComponent from \"./PlantViewComponent\";\nimport MyFooter from \"../Footer/MyFooter\";\nconst { Content } = Layout\n\n\n\nfunction Home() {\n//https://shareyourplant.herokuapp.com/api'http://localhost:3001/\n    const urls = ['https://shareyourplant.herokuapp.com/', 'http://localhost:5001/shareyourplant-b5c9a/us-central1/app/api' ]\n    const [devMode, setDevMode] = useState(false)\n    const [url, setUrl] = useState(urls[0])\n    const [plantView, setPlantView] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [imgLoading, setImgLoading] = useState(true)\n    const [socket, setSocket] = useState(null)\n\n    useEffect(() => {\n        setSocket(socketIOClient(url))\n        return function cleanUp() { if (socket) socket.disconnect(); }\n    },[])\n\n    const colorScheme = {main: '#264653',\n        second: '#2a9d8f',\n        third: '#e9c46a',\n        fourth: '#f4a261',\n        fifth: '#e76f51' }\n\n    const renderContent = () => {\n        return plantView ?\n            <PlantViewComponent\n                colorScheme={colorScheme}\n                toggleLoading={toggleLoading}\n                handlePlantView={handlePlantView}\n            />\n            :\n            <div className='flex flex-column items-center justify-center'>\n                <Items\n                    socket={socket}\n                    colorScheme={colorScheme}\n                    loading={loading}\n                    setLoading={setLoading}\n                    handlePlantView={handlePlantView}\n                    url={url}\n                />\n            </div>\n    }\n\n    const handlePlantView = () => {\n        setPlantView(!plantView);\n    }\n\n    const toggleLoading = () => {\n        setLoading(!loading);\n    }\n\n    const onChange = (bool) => {\n        setDevMode(bool)\n        setUrl( devMode ?\n            urls[0]\n        :\n            urls[1]\n        )\n         setLoading(true)\n    }\n\n    const returnHiddenStyle = () => {\n        return imgLoading ?\n            {display: 'none'}\n            :\n            {}\n    }\n\n    const returnLoadingPage = () => {\n        return imgLoading ?\n            <div className='flex flex-column item-center justify-center' style={{\n                height:'100vh',\n                width: '100vw',\n                backgroundColor: 'white'}}>\n                <LoadingOutlined style={{ fontSize: '100px', color: 'black' }} />\n            </div>\n            :\n            <div></div>\n    }\n\n    return (\n        <div className='wrappingContainer ' style={{\n            fontFamily: 'Quicksand, sans-serif'}}>\n            {returnLoadingPage()}\n            <div style={returnHiddenStyle()}>\n                <Layout>\n                    <Content>\n                        <div className='backgroundDiv'>\n                            <img\n                                src={'https://i.ibb.co/b5DH4nY/djnglHD.jpg'}\n                                alt={'https://i.ibb.co/b5DH4nY/djnglHD.jpg'}\n                                className='backgroundImg'\n                                onLoad={()=>{\n                                        console.log('loading done')\n                                        setImgLoading(false)\n                                    }\n                                }\n                            />\n                            <div className='flex flex-column items-center justify-start' style={{\n                                minHeight: '100vh',\n                                backgroundSize: '3000px 2000px',\n                                backgroundImage: `url('https://i.ibb.co/b5DH4nY/djnglHD.jpg')`}}>\n\n                                    <Header shadow={true} colorScheme={colorScheme}/>\n                                <div style={{\n                                    padding: '5% 5%',\n                                    marginBottom: 'auto'}}>\n                                    {renderContent()}\n                                </div>\n                                    <MyFooter colorScheme={colorScheme}/>\n                            </div>\n                        </div>\n                    </Content>\n                </Layout>\n            </div>\n        </div>\n    )\n}\n\n//onLoad={() => {\n//                         console.log('loading done')\n//                         setImgLoading(false)\n//                     }}\n\nexport default Home;\n","import React, {useEffect, useState} from 'react'\n\nconst Plantitem = (props) => {\n\n    let [imgHovered, setImgHovered] = useState(false)\n\n    let styles = {\n        imageStyle: {\n            width: props.width/10,\n            height: 'auto',\n            margin: 10,\n        },\n        imageStyleHovered: {\n            width: props.width/5,\n            height: 'auto',\n            margin: 10,\n        }\n    }\n\n    const imgHoverStyle = () => {\n        return imgHovered ?\n            styles.imageStyleHovered\n            :\n            styles.imageStyle\n    }\n\n    return (\n        <div>\n           <li> <img onMouseEnter={() => setImgHovered(true)}\n                     onMouseLeave={() => setImgHovered(false)}\n                     src={props.value.image_url}\n                     style={imgHoverStyle()}\n                />\n           </li>\n        </div>\n    )\n}\nexport default Plantitem\n","import React, {useEffect, useState} from 'react'\nimport Plantitem from \"./Plantitem\";\n\n\n\nconst ShowPlantData = (props) => {\n    let [dataState, setData] = useState(null);\n    let [loading, setLoading] = useState(true);\n\n    let styles = {\n        dataContainer: {\n            height: props.height - 400,\n            width: props.width/1.5,\n            overflow: 'none',\n            border: '1px solid black',\n            marginLeft: 100,\n        }, dataList: {\n            listStyleType: 'none',\n            height: '300px',\n            display: 'flex',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n        }\n\n    }\n\n    useEffect( () => {\n            fetch('http://localhost:3002/api/getPlantData')\n                .then((data) => { return data.json()} )\n                .then((res) => {\n                    setData(res.data.data)\n                    setTimeout(()=>\n                        setLoading(false), 500)\n                }).catch(function(error) {\n                console.log('Looks like there was a problem: \\n', error);\n            });\n            return function cleanup() {}\n\n        }, []\n    )\n    const renderData = () => {\n        return dataState.map( (e) => {\n            return <Plantitem key={e} value={e} {...props}> </Plantitem>\n        })\n    }\n\n    return (\n        loading ?\n            <div>\n            </div>\n            :\n            <div style={styles.dataContainer}> <ul style={styles.dataList}> {renderData()} </ul> </div>\n    )\n}\nexport default ShowPlantData\n","import React, {useEffect, useState} from 'react'\nimport Header from \"../../Header/Header\";\nimport {Button} from \"antd\";\nimport '../../../styles/Fonts.css'\nimport { useHistory }  from 'react-router-dom'\nimport ShowPlantData from \"../Data/ShowPlantData\";\n\nconst Forest = require('../../../Assets/img/ForestFoggy.jpg')\n\nconst ApiLanding = (props) => {\n    const history = useHistory();\n\n\n    let [imgLoading, setImgLoading] = useState(true);\n    let [windowWidth, setWindowWidth] = useState(0);\n    let [windowHeight, setWindowHeight] = useState(0);\n    let [buttonHovered, setButtonHovered] = useState(false);\n\n    var styles = {\n        Container: {\n            width: '100vw',\n            height: '100vh',\n            margin: 0,\n            padding: 0,\n        },\n        Content: {\n            width: '100%',\n            height: '100%',\n            margin: 0,\n            padding: windowWidth/45,\n            display: 'flex',\n            flexDirection: 'column'\n        },\n        backgroundImg: {\n            pointerEvents: 'none',\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            zIndex: '-1',\n            objectFit: 'cover'\n    },\n        backgroundDiv: {\n        overflow: 'hidden',\n        width:'100%',\n    },\n        FontStyle: {\n            fontFamily: 'Anton',\n            fontSize: '80px',\n            paddingLeft: windowWidth/9,\n            color: '#E5D4ED',\n            textShadow: '3px 3px 20px #000',\n},\n        buttonStyle: {\n            background:    '#15d798',\n            borderRadius: '1000px',\n            boxShadow:    '2px 2px #444444',\n            padding:       '20px 45px',\n            color:         '#ffffff',\n            display:       'inline-block',\n            fontFamily:    'Anton',\n            textAlign:    'center',\n            width: windowWidth/5,\n            marginLeft: windowWidth/8,\n        },\n        buttonStyleHovered: {\n            background:    '#15d766',\n            borderRadius: '1000px',\n            boxShadow:    '2px 2px #444444',\n            padding:       '20px 45px',\n            color:         '#ffffff',\n            display:       'inline-block',\n            fontFamily:    'Anton',\n            textAlign:    'center',\n            width: windowWidth/5,\n            marginLeft: windowWidth/8,\n        }\n    }\n\n\n\n\n    const colorScheme = {main: '#264653',\n        second: '#2a9d8f',\n        third: '#e9c46a',\n        fourth: '#f4a261',\n        fifth: '#e76f51' }\n\n    useEffect( () => {\n        updateWindowDimensions()\n        window.addEventListener('resize', updateWindowDimensions);\n        return function cleanUp() {}\n    }, [])\n\n    const updateWindowDimensions = () => {\n        setWindowHeight(window.innerHeight)\n        setWindowWidth(window.innerWidth)\n    }\n\n    const returnButtonStyle = () => {\n        return buttonHovered ?\n            styles.buttonStyleHovered\n            :\n            styles.buttonStyle\n    }\n\n    return (\n            <div style={styles.Container}>\n                <div style={styles.backgroundDiv}>\n                    <img style={styles.backgroundImg}\n                        src={Forest}\n                        alt={Forest}\n                        onLoad={ ()=>{\n                            console.log('loading done')\n                            setImgLoading(false)\n                        }\n                        }\n                    />\n                    <Header colorScheme={colorScheme}> </Header>\n                    <div style={styles.Content}>\n                        <h1 className='noselect' style={styles.FontStyle}> PLANT API</h1>\n                        {props.state ?\n                            <div style={returnButtonStyle()} onMouseEnter={() => setButtonHovered(true)}\n                                 onMouseLeave={() => setButtonHovered(false)}\n                                 onClick={() => history.push('/api/showData')}><h1 className='noselect'> enter </h1>\n                            </div>\n                            :\n                            <div>\n                                <ShowPlantData width={windowWidth} height={windowHeight}></ShowPlantData>\n                            </div>\n                        }\n                        </div>\n                </div>\n            </div>\n    )\n\n\n}\n\nexport default ApiLanding\n","import React from 'react'\n\n\nconst FelixPage = () => {\n\n    return(\n        <div>\n            <h1> this is felixs section </h1>\n        </div>\n    )\n}\n\nexport default FelixPage\n\n","import React from 'react'\n\n\nconst FranziPage = () => {\n\n    return(\n        <div>\n            <h1> this is franzis section </h1>\n        </div>\n    )\n}\n\nexport default FranziPage\n","import React from 'react'\n\n\nconst SunanPage = () => {\n\n    return(\n        <div>\n            <h1> this is sunans section </h1>\n        </div>\n    )\n}\n\nexport default SunanPage\n","import {Route, Switch} from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport ApiLanding from \"./components/plantApi/ApiLanding/ApiLanding\";\nimport React from \"react\";\nimport FelixPage from \"./components/Felix/FelixPage\";\nimport FranziPage from \"./components/Franzi/FranziPage\";\nimport SunanPage from \"./components/Sunan/SunanPage\";\nimport ShowPlantData from './components/plantApi/Data/ShowPlantData'\n\n\nconst Router = () => {\n\n    return (\n            <Switch>\n                <Route  exact path=\"/\" render={props => <Home {...props} />} />\n                <Route  exact path=\"/api\" render={props => <ApiLanding state={true} {...props} />} />\n                <Route  path=\"/felix\" render={props => <FelixPage {...props} />} />\n                <Route  path=\"/franzi\" render={props => <FranziPage {...props} />} />\n                <Route  path=\"/sunan\" render={props => <SunanPage {...props} />} />\n                <Route  path=\"/api/showData\" render={props => <ApiLanding state={false} {...props} />} />\n            </Switch>\n    )\n}\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Home is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n          <Router />\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}